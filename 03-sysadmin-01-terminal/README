5. Ознакомьтесь с графическим интерфейсом VirtualBox, посмотрите как выглядит виртуальная машина, которую создал для вас Vagrant, какие аппаратные ресурсы ей выделены. Какие ресурсы выделены по-умолчанию?

Ответ. Настройки по умолчанию: имя,  ssh адрес, ssh имя, метод аутентификации SSH, 1024 MB памяти, 8 MB видеопамяти, 1 CPU

6. Ознакомьтесь с возможностями конфигурации VirtualBox через Vagrantfile: документация. Как добавить оперативной памяти или ресурсов процессора виртуальной машине?

Ответ.
a.Изменить Vagrantfile следующим образом:

Vagrant.configure("2") do |config|

        config.vm.box = "/Users/ayajirob/Desktop/code/devops-netology/03-sysadmin-01-terminal"
        config.vm.provider "virtualbox" do |v|
                v.memory = 2048
                v.cpus = 2
        end
end

b. Ввести команду vagrant up

7. Команда vagrant ssh из директории, в которой содержится Vagrantfile, позволит вам оказаться внутри виртуальной машины без каких-либо дополнительных настроек. Попрактикуйтесь в выполнении обсуждаемых команд в терминале Ubuntu.
	
	Done. Потренировала горячие клавиши терминла и все команды из презентации.

8. Ознакомиться с разделами man bash, почитать о настройках самого bash:

	какой переменной можно задать длину журнала history, и на какой строчке manual это описывается?
	Переменная - HISTFILESIZE (поиск по ключевым словам в мане через строку ввода через слэш "/")
	Строчка в мане bash - 1121 (нужно ввести -N и нажать ENTER, чтобы появилась нумераци строк)
	
	что делает директива ignoreboth в bash?
	Настраивает, каким образом будет будет сохранятся список команд в истории. ignoreboth включает в себя ignorespace и ignoredups. Это означает, что в историю не будут сохранятся, строки, которые начинались с пробела, а так же не будут сохранятся строки, которые были идентичный предыдущей сторке в истории.
	Нужно добавить в файл, который находится по данному пути: ~/.bashrс, такую строчку: export HISTCONTROL=ignoreboth:erasedups

9. В каких сценариях использования применимы скобки {} и на какой строчке man bash это описано?
	
	1. Для shell скобки {} являются зарезервированными словами, используются как составная часть команд.Это описано под заголовком RESERVED WORDS (стр. 226-233 мана), а также в Compound Commands (стр 336 - 343).
	2. Так же скобки {} могут использоваться для shell функций. Мужду скобками тогда перечисляется список комманд, которые будут исполнены при вызове этой функции.(стр 526-543 мана).
	3. Скобки {} используются в механизме замены выражений, который описан в стр. 1465-1520.

10. Основываясь на предыдущем вопросе, как создать однократным вызовом touch 100000 файлов? А получилось ли создать 300000?
	
	С помощью команды touch file{1..100000}
	300000 файлов создать не полчуилось, т.к. Argument list too long.
11. В man bash поищите по /\[\[. Что делает конструкция [[ -d /tmp ]]
	
	Если я правильно понимаю, то эта конструкция используется в конструкциях с if. Если мы пишем в коде "if [[ -d /tmp ]]; then", то можно перевести это так: "Если в текущей директории есть файлы типа директория, то..."

12. Основываясь на знаниях о просмотре текущих (например, PATH) и установке новых переменных; командах, которые мы рассматривали, добейтесь в выводе type -a bash в виртуальной машине наличия первым пунктом в списке:

bash is /tmp/new_path_directory/bash
bash is /usr/local/bin/bash
bash is /bin/bash
(прочие строки могут отличаться содержимым и порядком)

13. Чем отличается планирование команд с помощью batch и at?
	Batch, в отличии от at, выполняет задание, когда это позволяет уровень загрузки системы.	Если загрузка системы выше указанной(по умолчанию - 1,5), то задания буду ждать в очереди.

14. Завершите работу виртуальной машины чтобы не расходовать ресурсы компьютера и/или батарею ноутбука.
	
	Done. logout, vagrant suspend
